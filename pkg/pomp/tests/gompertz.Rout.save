
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(pomp)
> options(digits=4)
> 
> pompExample(gompertz)
newly created object(s):
 gompertz 
> 
> po <- gompertz
> coef(po)
    K     r sigma   tau   X.0 
  1.0   0.1   0.1   0.1   1.0 
> coef(po,transform=TRUE)
     K      r  sigma    tau    X.0 
 0.000 -2.303 -2.303 -2.303  0.000 
> coef(po,c("r","X.0"))
  r X.0 
0.1 1.0 
> coef(po,c("r","X.0"),transform=TRUE)
     r    X.0 
-2.303  0.000 
> coef(po,c("r","K")) <- c(0.2,1)
> coef(po)
    K     r sigma   tau   X.0 
  1.0   0.2   0.1   0.1   1.0 
> coef(po,transform=TRUE)
     K      r  sigma    tau    X.0 
 0.000 -1.609 -2.303 -2.303  0.000 
> guess <- coef(po)
> guess["r"] <- 0
> 
> try(
+     mf <- mif(
+               po,
+               start=guess,
+               Nmif=5,Np=1000,
+               transform=TRUE,
+               ic.lag=1,var.factor=1,
+               cooling.fraction=0.99^50,
+               rw.sd=c(r=0.02,K=0.02)
+               )
+     )
Error : 'mif' cannot estimate non-finite parameters.
The following transformed parameters are non-finite: 'r'
> 
> set.seed(93848585L)
> mf <- mif(
+           po,
+           Nmif=5,Np=1000,
+           transform=TRUE,
+           ic.lag=1,var.factor=1,
+           cooling.fraction=0.99^50,
+           rw.sd=c(r=0.02,K=0.02)
+           )
> coef(mf,transform=TRUE)
       K        r    sigma      tau      X.0 
 0.04671 -1.61336 -2.30259 -2.30259  0.00000 
> coef(mf)
     K      r  sigma    tau    X.0 
1.0478 0.1992 0.1000 0.1000 1.0000 
> conv.rec(mf)
         variable
iteration loglik nfail       K      r  sigma    tau X.0
        0  30.35     0 0.00000 -1.609 -2.303 -2.303   0
        1  30.59     0 0.01048 -1.609 -2.303 -2.303   0
        2  30.96     0 0.02378 -1.610 -2.303 -2.303   0
        3  29.78     0 0.03161 -1.607 -2.303 -2.303   0
        4  31.18     0 0.03785 -1.611 -2.303 -2.303   0
        5     NA    NA 0.04671 -1.613 -2.303 -2.303   0
> conv.rec(mf,transform=TRUE)
      K      r sigma tau X.0 loglik nfail
0 1.000 0.2000   0.1 0.1   1  30.35     0
1 1.011 0.2000   0.1 0.1   1  30.59     0
2 1.024 0.1999   0.1 0.1   1  30.96     0
3 1.032 0.2005   0.1 0.1   1  29.78     0
4 1.039 0.1996   0.1 0.1   1  31.18     0
5 1.048 0.1992   0.1 0.1   1     NA    NA
> conv.rec(mf,c("loglik","r"))
         variable
iteration loglik      r
        0  30.35 -1.609
        1  30.59 -1.609
        2  30.96 -1.610
        3  29.78 -1.607
        4  31.18 -1.611
        5     NA -1.613
> try(conv.rec(mf,c("loglik","r"),transform=FALSE))
         variable
iteration loglik      r
        0  30.35 -1.609
        1  30.59 -1.609
        2  30.96 -1.610
        3  29.78 -1.607
        4  31.18 -1.611
        5     NA -1.613
> try(conv.rec(mf,c("loglik","r"),transform=TRUE))
  loglik      r
0  30.35 0.2000
1  30.59 0.2000
2  30.96 0.1999
3  29.78 0.2005
4  31.18 0.1996
5     NA 0.1992
> conv.rec(mf,c("loglik","r"),transform=TRUE)
  loglik      r
0  30.35 0.2000
1  30.59 0.2000
2  30.96 0.1999
3  29.78 0.2005
4  31.18 0.1996
5     NA 0.1992
> conv.rec(mf,c("loglik"),transform=TRUE)
    0     1     2     3     4     5 
30.35 30.59 30.96 29.78 31.18    NA 
> conv.rec(mf,c("K"),transform=TRUE)
    0     1     2     3     4     5 
1.000 1.011 1.024 1.032 1.039 1.048 
> 
> proc.time()
   user  system elapsed 
  1.360   0.040   1.402 
